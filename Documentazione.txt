
gcloud app deploy --image-url gcr.io/YOUR_PROJECT_ID/YOUR_CONTAINER_IMAGE
```
gcloud --project=open-targets-eu-dev app deploy cinzia.yaml\
    --no-promote \
    -v pos-test

```
env_variables:
  ELASTICSEARCH_HOST: "example-gcs-host"



eu.gcr.io/open-targets-eu-dev/appengine/api-beta.pos-test:latest

gcloud --project=open-targets-eu-dev app deploy cinzia.yaml\
    --image-url eu.gcr.io/open-targets-eu-dev/appengine/api-beta.pos-test:latest \
    --no-promote \
    -v pos-test



ssh-
cat ~/.ssh/id_rsa.pub | ssh your_user@noah-login-01 "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

#cat config.tfvars | grep release_id_prod | awk -F= '{print $2}' | tr -d ' "'

Service account created for POS inside the following projects


export SERVICE_ACCOUNT_ID=pos-service-account-test
export PROJECT_IDS_GS=["open-targets-eu-dev","open-targets-prod","open-targets-genetics","open-targets-platform","open-targets"]
export POS_ROLES= ["roles/compute.admin", "roles/logging.viewer","roles/compute.instanceAdmin","roles/storage.objectViewer","roles/storage.admin","roles/storage.legacyBucketReader"]
gcloud iam service-accounts create $SERVICE_ACCOUNT_ID \
    --description="Platform output support service account" \
    --display-name="Platform output support (POS)"


gcloud projects add-iam-policy-binding $PROJECT_ID_GS \
    --member="serviceAccount:$SERVICE_ACCOUNT_ID@$PROJECT_ID_GS.iam.gserviceaccount.com" \
    --role="roles/compute.admin"



curl https://repo.anaconda.com/archive/Anaconda3-2021.05-Linux-x86_64.sh > anaconda3.sh
sudo -u otftpuser bash anaconda3.sh

Install google cloud skd to EBI space

curl https://sdk.cloud.google.com > install.sh
bash install.sh --disable-prompts
sudo -u otftpuser CLOUDSDK_PYTHON=/ebi/ftp/private/otftpuser/anaconda3/bin/python bash install.sh --disable-prompts


tmux
sudo -u otftpuser CLOUDSDK_PYTHON=/ebi/ftp/private/otftpuser/anaconda3/bin/python /nfs/ftp/private/otftpuser/google-cloud-sdk/bin/gsutil rsync -r gs://open-targets-data-releases/21.06/input/annotation-files/ .

gcloud projects add-iam-policy-binding PROJECT_ID \
    --member="serviceAccount:SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com" \
    --role="ROLE_NAME"

user that can impersonate the service-account
gcloud iam service-accounts add-iam-policy-binding \
    SERVICE_ACCOUNT_ID@PROJECT_ID.iam.gserviceaccount.com \
    --member="user:USER_EMAIL" \
    --role="roles/iam.serviceAccountUser"


$ mkdir ~/python27-bin
$ ln -s /usr/bin/python2.7 ~/python27-bin/python
$ PATH=~/python27-bin:$PATH ./gsutil version -l | grep python
python version: 2.7.6

export CLOUDSDK_PYTHON=python2.7


Preparing transaction: done
Executing transaction: done
installation finished.
Do you wish the installer to initialize Anaconda3
by running conda init? [yes|no]
[no] >>> no

You have chosen to not have conda modify your shell scripts at all.
To activate conda's base environment in your current shell session:

eval "$(/ebi/ftp/private/otftpuser/anaconda3/bin/conda shell.YOUR_SHELL_NAME hook)"

To install conda's shell functions for easier access, first activate, then:

conda init

If you'd prefer that conda's base environment not be activated on startup,
   set the auto_activate_base parameter to false:

conda config --set auto_activate_base false

Thank you for installing Anaconda3!

===========================================================================

Working with Python and Jupyter notebooks is a breeze with PyCharm Pro,
designed to be used with Anaconda. Download now and have the best data
tools at your fingertips.

PyCharm Pro for Anaconda is available at: https://www.anaconda.com/pycharm


You can use gsutil rsync command, with -x option to exclude some objects. Something like :

gsutil -m rsync -r -x '^dir3/*' gs://so-bucket .